namespace: killer-app-dev

backend:
  name: backend-app
  replicaCount: 1

  image:
    repository: 692859952726.dkr.ecr.us-east-1.amazonaws.com/my_app
    tag: backend-85e2bc5f
    pullPolicy: Always

  service:
    name: backend-service
    type: ClusterIP
    port: 5000
    TargetPort: 5000

  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"

frontend:
  name: frontend-app
  replicaCount: 1

  image:
    repository: 692859952726.dkr.ecr.us-east-1.amazonaws.com/my_app
    tag: frontend-85e2bc5f
    pullPolicy: Always

  service:
    name: frontend-service
    type: ClusterIP
    port: 80
    targetPort: 80

  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "256Mi"
      cpu: "200m"

  volumeMounts:
    - name: nginx-config
      mountPath: /etc/nginx/conf.d/default.conf
      subPath: nginx.conf

  volumes:
    - name: nginx-config
      configMap:
        name: nginx-config

ingress:
  enabled: true
  name: killer-app-ingress
  className: alb
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:692859952726:certificate/24bfd1d3-4686-4fa2-9e58-ea783ef769d4
  host: devopsinterviewer.online

  paths:
    - path: /
      pathType: Prefix
      backend:
        service:
          name: frontend-service
          port: 80
    - path: /api
      pathType: Prefix
      backend:
        service:
          name: backend-service
          port: 5000

configmap:
  enabled: true
  name: nginx-config
  data:
    nginx.conf: |
      server {
          listen 80;
          server_name _;
          root   /usr/share/nginx/html;
          index  index.html;
          location / {
              try_files $uri $uri/ /index.html;
          }
          # Pretty URLs for top-level pages
          location = /login {
              try_files /login.html =404;
          }
          location = /login/ {
              try_files /login.html =404;
          }
          location = /sessions {
              try_files /sessions/index.html =404;
          }
          location = /sessions/ {
              try_files /sessions/index.html =404;
          }
          location = /profile {
              try_files /profile/index.html =404;
          }
          location = /profile/ {
              try_files /profile/index.html =404;
          }

          location /api/ {
              proxy_pass http://backend-service.{{ .Values.namespace }}.svc.cluster.local:5000;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
          }
      }

# Secret Store configuration
secretStore:
  enabled: true
  name: aws-secretstore
  provider:
    aws:
      service: SecretsManager
      region: us-east-1  
# -----------------------------
# External Secret configuration
# -----------------------------
externalSecret:
  enabled: true
  name: killer-app-secrets-helm
  namespace: killer-app-dev 
  refreshInterval: 1h
  secretStoreRef:
    name: aws-secretstore
  target:
    name: killer-app-secret
    creationPolicy: Owner
  data:
    - secretKey: SUPABASE_URL
      remoteRef:
        key: my-api-keys
        property: SUPABASE_URL
    - secretKey: SUPABASE_KEY
      remoteRef:
        key: my-api-keys
        property: SUPABASE_KEY
    - secretKey: SUPABASE_ANON_KEY
      remoteRef:
        key: my-api-keys
        property: SUPABASE_ANON_KEY
    - secretKey: GROQ_API_KEY
      remoteRef:
        key: my-api-keys
        property: GROQ_API_KEY